class Shopping {

    /**
     * –ú–µ—Ç–æ–¥ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –∫–æ—Ä–∑–∏–Ω—É - —Ä–µ–Ω–¥–∞—Ä–∏—Ç –ø—É—Å—Ç–æ–π html
     */
    handerClear(){
        ROOT_SHOPPING.innerHTML = ``;
    }

    /**
     * –ú–µ—Ç–æ–¥ —Å–æ–±—ã—Ç–∏—è —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã.
     * @param element
     * @param id
     */
    handleSetLocationStorage(element, id) {
        localStorageUtil.putProducts(id);

        this.render();
    }

    /**
     * –ú–µ—Ç–æ–¥ –≤—ã–≤–æ–¥–∏—Ç –Ω–∞ —ç–∫—Ä–∞–Ω –∫–æ—Ä–∑–∏–Ω—É —Ç–æ–≤–∞—Ä–æ–≤.
     */
    render(){
        const productsStore = localStorageUtil.getProducts();
        let htmlCatalog = '';
        let sumCatalog = 0;

        CATALOG.forEach(({ id, name, price }) => {
            if (productsStore.indexOf(id) !== -1){
                htmlCatalog += `
                    <tr>
                        <td class="shopping-element__name">üåπ ${name}</td>
                        <td class="shopping-element__price">${price.toLocaleString()} —Ä—É–±</td>
                        <td class="shopping-element__cancle" onclick="shoppingPage.handleSetLocationStorage(this, '${id}')"></td>
                    </tr>
                `;
                sumCatalog += price;
            }
        });
        /**
         * –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –∫–æ—Ä–∑–∏–Ω—ã html, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç —Ä–µ–Ω–¥–µ—Ä–∏—Ç—å—Å—è –Ω–∞ —Å–∞–π—Ç
         * @type {string}
         */
        const html = `
            <div class="shopping-container">
            <div class="shopping__close" onclick="shoppingPage.handerClear()"></div>
                <table>
                    ${htmlCatalog}
                     <tr>
                        <td class="shopping-element__name shopping-element_color">–ò—Ç–æ–≥–æ:</td>
                        <td class="shopping-element__price">${sumCatalog.toLocaleString()} —Ä—É–±</td>
                    </tr>
                </table>
            </div>
        `;

        /**
         * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ html –Ω–∞ —Å–∞–π—Ç
         * @type {string}
         */
        ROOT_SHOPPING.innerHTML = html;
    }
}

const shoppingPage = new Shopping();